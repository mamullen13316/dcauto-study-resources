#!/usr/bin/env ansible-playbook

---
- name: Create ACI Tenant and Children
  hosts: devnet
  connection: local
  gather_facts: false

  collections:
    - cisco.aci

  vars:
    task_common: &task_common
      host: "{{ inventory_hostname }}"
      username: "{{ name }}"
      password: "{{ pwd }}"
      validate_certs: "{{ validate_certs }}"
      timeout: "{{ timeout }}"
      # output_level: debug

  tasks:
    - name: Create Tenant
      cisco.aci.aci_tenant:
        tenant: "{{ tenant_name }}"
        description: "{{ tenant_desc }}"
        state: present
        <<: *task_common
      register: apic_tenant

    - name: Create VRF
      cisco.aci.aci_vrf:
        vrf: "{{ vrf_1_name }}"
        description: "{{ vrf_1_desc }}"
        tenant: "{{ tenant_name }}"
        state: present
        <<: *task_common
      register: apic_vrf

    - name: Create Bridge Domain
      cisco.aci.aci_bd:
        bd: "{{ bd_1_name }}"
        description: "{{ bd_1_desc }}"
        tenant: "{{ tenant_name }}"
        vrf: "{{ vrf_1_name }}"
        state: present
        <<: *task_common
      register: apic_bd

    - name: Create Subnet
      cisco.aci.aci_bd_subnet:
        subnet_name: "{{ subnet_1_name }}"
        gateway: "{{ subnet_1_gw }}"
        subnet_mask: "{{ subnet_1_mask }}"
        description: "{{ subnet_1_desc }}"
        bd: "{{ bd_1_name }}"
        tenant_name: "{{ tenant_name }}"
        scope: private
        state: present
        <<: *task_common
      register: apic_subnet

    - name: Create Filter
      cisco.aci.aci_filter:
        tenant: "{{ tenant_name }}"
        filter: "{{ filter_1_name }}"
        description: "{{ filter_1_desc }}"
        state: present
        <<: *task_common
      register: apic_filter

    - name: Create Filter Entry
      cisco.aci.aci_filter_entry:
        tenant: "{{ tenant_name }}"
        filter: "{{ filter_1_name }}"
        entry: "{{ item.entry }}"
        dst_port: "{{ item.port }}"
        ether_type: "{{ filter_entry_1_ether_type }}"
        ip_protocol: "{{ filter_entry_1_ip_protocol }}"
        state: present
        <<: *task_common
      with_items:
        - "{{ filter_1_entry_data }}"
      register: apic_filter_entry

    - name: Create Contract
      cisco.aci.aci_contract:
        tenant: "{{ tenant_name }}"
        contract: "{{ contract_1_name }}"
        description: "{{ contract_1_desc }}"
        scope: "{{ contract_1_scope }}"
        state: present
        <<: *task_common
      register: apic_contract

    - name: Create Subject
      cisco.aci.aci_contract_subject:
        tenant: "{{ tenant_name }}"
        subject: "{{ contract_subject_1_name }}"
        description: "{{ contract_subject_1_desc }}"
        contract: "{{ contract_1_name }}"
        state: present
        <<: *task_common
      register: apic_contract_subject

    - name: Create Subject & Filter Binding
      cisco.aci.aci_contract_subject_to_filter:
        tenant: "{{ tenant_name }}"
        contract: "{{ contract_1_name }}"
        subject: "{{ contract_subject_1_name }}"
        filter: "{{ filter_1_name }}"
        state: present
        <<: *task_common
      register: apic_subject_filter

    - name: Create Application Profile
      cisco.aci.aci_ap:
        ap: "{{ app_profile_1_name }}"
        description: "{{ app_profile_1_desc }}"
        tenant: "{{ tenant_name }}"
        state: present
        <<: *task_common
      register: apic_ap

    - name: Create EPG
      cisco.aci.aci_epg:
        epg: "{{ epg_1_name }}"
        description: "{{ epg_1_desc }}"
        ap: "{{ app_profile_1_name }}"
        tenant: "{{ tenant_name }}"
        state: present
        <<: *task_common
      register: apic_epg

    - name: Bind EPG to Contract
      cisco.aci.aci_epg_to_contract:
        tenant: "{{ tenant_name }}"
        ap: "{{ app_profile_1_name }}"
        epg: "{{ epg_1_name }}"
        contract: "{{ contract_1_name }}"
        contract_type: provider
        state: present
        <<: *task_common
      register: apic_epg_to_contract

    - name: Display Output
      debug:
        msg: 'The current DN is: {{ apic_ap["current"][0]["fvAp"]["attributes"]["dn"] }}'
      when: apic_ap["current"][0] is defined
