# Add comments to describe playbook
# Add inline comments
# Add collection
# Replace expect with alternative copy method
---
- name: Verify Downloaded NX-OS Image Integrity
  hosts: localhost
  connection: local
  gather_facts: false

- name: Upgrade Nexus 9000v
  hosts: nexus
  connection: network_cli
  gather_facts: false

  tasks:
    - name: Disable VTY Timeout
      nxos_config:
        commands:
          - exec-timeout 0
        parents:
          - line vty

    - name: Get Pre-Upgrade OS Version
      nxos_facts:
        gather_subset:
          - 'min'
      register: starting_nxos_version

    - name: Initiate Upgrade
      block:
        - name: "Copy New Image to Bootflash"
          expect:
            command: "scp {{ file_path }}{{ new_os_image }} {{ ansible_user }}@{{ ansible_host }}:"
            responses:
              (?i)password: "{{ ansible_password }}"
            timeout: 600

        - name: Configure Boot Image
          nxos_config:
            lines:
              - "boot nxos bootflash:{{ new_os_image }}"
          register: boot_image

        - name: Save Config
          nxos_config:
            save_when: always

        - name: Initiate Nexus Reboot
          nxos_reboot:
            confirm: true
      when:
        - hostvars.n9kv.new_os_target_version != starting_nxos_version.ansible_facts.ansible_net_version

- name: Post-Upgrade Checks
  hosts: nexus
  connection: network_cli
  gather_facts: false

  tasks:
    - name: Wait For Reboot to Complete
      block:
        - name: Poll For Connectivity
          wait_for_connection:
            sleep: 5
            delay: 90
            timeout: 600

        - name: Get Post-Upgrade OS Version
          nxos_facts:
            gather_subset:
              - 'min'
          register: new_nxos_version

        - name: Display Upgrade Status
          debug:
            msg: "Upgrade complete - new software version: {{ new_nxos_version.ansible_facts.ansible_net_version }}"
          when:
            - new_nxos_version.ansible_facts.ansible_net_version != starting_nxos_version.ansible_facts.ansible_net_version

      when:
        - hostvars.n9kv.new_os_target_version != starting_nxos_version.ansible_facts.ansible_net_version
